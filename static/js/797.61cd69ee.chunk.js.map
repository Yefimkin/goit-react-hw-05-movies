{"version":3,"file":"static/js/797.61cd69ee.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.js","useFetchItem/useFetchItem.js","services/moviesApi.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import { NavLink, Outlet, useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Loader from 'components/Loader/Loader';\nimport { useFetchItem } from 'useFetchItem/useFetchItem';\n\nconst Link = styled(NavLink)`\n  display: flex;\n  gap: 10px;\n`;\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const goBackURL = location?.state?.from ?? '/';\n\n  const { item, loading, title, poster, release, genres, rating } =\n    useFetchItem();\n\n  return (\n    <>\n      {loading && <Loader />}\n      {item && (\n        <>\n          <Link to={goBackURL}>Go back</Link>\n          <hr />\n          <img src={poster} alt={title} />\n\n          <h1>\n            {title} {release}\n          </h1>\n          <p>{`User Score: ${rating}`}</p>\n          <h2>Overview</h2>\n          <p>{item.overview}</p>\n          <h2>Genres</h2>\n          <div>{genres}</div>\n          <hr />\n          <p>Additional information</p>\n          <Link to=\"cast\" state={{ from: goBackURL }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: goBackURL }}>\n            Reviews\n          </Link>\n          <hr />\n          <Outlet />\n        </>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;","import { useState, useEffect } from 'react';\nimport { getMovieDetails } from 'services/moviesApi';\nimport { useParams } from 'react-router-dom';\n\nexport const useFetchItem = () => {\n  const [item, setItem] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [title, setTitle] = useState('');\n  const [release, setRelease] = useState('');\n  const [genres, setGenres] = useState([]);\n  const [rating, setRating] = useState('');\n\n  const { itemId } = useParams();\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      setLoading(true);\n      try {\n        const itemData = await getMovieDetails(itemId);\n        const { title, release_date, genres, vote_average } =\n          itemData;\n\n        const releaseDate = release_date.slice(0, 4);\n        const itemGenres =\n          genres.length > 0 ? (\n            <p>{genres.map(genre => genre.name).join(', ')}</p>\n          ) : (\n            <p>No genres found</p>\n          );\n        const itemRange = vote_average || 'No rating yet';\n\n        setItem(itemData);\n        setTitle(title);\n        setRelease(releaseDate);\n        setGenres(itemGenres);\n        setRating(itemRange);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, [itemId]);\n  return { item, loading, title, release, genres, rating };\n};","// import axios from 'axios';\n\n// // Key\n// const KEY = 'b119b11c5a40234389ef5bbd7aaf9e1d';\n// axios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\n// // список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\n// export const getTrendingMovies = async () => {\n//     const response = await axios.get(`/trending/all/day&api_key=${KEY}`);\n//     const trendingMovies = await response.data.results;\n//     return trendingMovies;\n// };\n\n// // пошук фільму за ключовим словом на сторінці фільмів.\n// export const searchMovies = async (movieName, page) => {\n//     const response = await axios.get(`search/movie?api_key=${KEY}&page=${page}&language=en&query=${movieName}`);\n//     const searchMoviesData = await response.data;\n//     return searchMoviesData;\n// }\n\n// // запит повної інформації про фільм для сторінки кінофільму.\n// export const getMovieDetails = async id => {\n//     const response = await axios.get(`/movie/${id}?api_key=${KEY}&language=en-US`);\n//     const movieDetails = await response.data;\n//     return movieDetails;\n// };\n\n// // запит інформації про акторський склад для сторінки кінофільму.\n// export const getMovieCredits = async movieId => {\n//     const response = await axios.get(`/movie/${movieId}/credits?api_key=${KEY}&language=en-US`);\n//     const movieCredits = await response.data;\n//     return movieCredits;\n// };\n\n// // запит оглядів для сторінки кінофільму.\n// export const getMovieReviews = async movieId => {\n//     const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n//     const movieReviews = await response.data;\n//     return movieReviews;\n// };\n\nimport axios from 'axios';\n\nconst KEY = 'b119b11c5a40234389ef5bbd7aaf9e1d';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get(`/trending/all/day?api_key=${KEY}`);\n  const trendingMovies = await response.data.results;\n  return trendingMovies;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n\n  const movieDetails = await response.data;\n  return movieDetails;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await axios.get(\n    `/movie/${movieId}/credits?api_key=${KEY}&language=en-US`\n  );\n  const movieCredits = await response.data;\n  return movieCredits;\n};\n\nexport const getMovieReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews?api_key=${KEY}`);\n  const movieReviews = await response.data;\n  return movieReviews;\n};\n\nexport const fetchMovieByName = async (movieName, page) => {\n  const response = await axios.get(\n    `search/movie?api_key=${KEY}&page=${page}&language=en&query=${movieName}`\n  );\n  const searchMoviesData = await response.data.results;\n  return searchMoviesData;\n};","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["Link","styled","NavLink","location","useLocation","goBackURL","state","from","useState","item","setItem","loading","setLoading","title","setTitle","release","setRelease","genres","setGenres","rating","setRating","itemId","useParams","useEffect","fetchTrendingMovies","getMovieDetails","itemData","release_date","vote_average","releaseDate","slice","itemGenres","length","map","genre","name","join","itemRange","console","log","useFetchItem","poster","Loader","to","src","alt","overview","KEY","axios","getTrendingMovies","response","data","results","trendingMovies","id","movieDetails","getMovieCredits","movieId","movieCredits","getMovieReviews","movieReviews","fetchMovieByName","movieName","page","searchMoviesData","_taggedTemplateLiteral","strings","raw","Object","freeze","defineProperties","value"],"sourceRoot":""}